{

  // DO NOT EDIT THIS FILE DIRECTLY FOR YOUR LOCAL SETUP.
  //
  // This file provides useful defaults for development environments.
  // To override any variable, copy it into a file called "development.json5"
  // and set it there. This is the default environment unless NODE_ENV
  // is set.
  //
  // To configure a production environment, copy it into a file called
  // "production.json5" and set the relevant variables there.
  //
  // For more about load order, see the config package documentation:
  // https://github.com/lorenwest/node-config/wiki/Configuration-Files#file-load-order

  // Set to true if all requests should generate a maintenance notice
  maintenanceMode: false,

  // Log all requests to console in simple, color-coded format. Set to false
  // to disable logging. Alternative formats:
  // https://www.npmjs.com/package/morgan#predefined-formats
  logger: 'dev',

  // We mostly use relative URLs, but sometimes a qualified URL is required.
  // Must terminate with /
  qualifiedURL: 'https://lib.reviews/',

  // Port used for development environment. Set this to something like 8000
  // if you don't want to grant elevated privileges to Node.
  devPort: 80,

  // HTTPS settings; disabled for local development. Production deployments
  // can enable this to serve TLS directly using Certbot-managed files.
  https: {
    enabled: false,
    port: 443,
    certPath: "/etc/letsencrypt/live/lib.reviews/fullchain.pem",
    keyPath: "/etc/letsencrypt/live/lib.reviews/privkey.pem"
  },

  // RethinkDB configuration. We use a connection pool, so you can add
  // additional servers to the array if needed.
  dbServers: [
    {
      host: "localhost",
      port: 28015
    }
  ],
  dbName: "libreviews",
  dbUser: "admin",
  dbPassword: "",

  postgres: {
    host: "localhost",
    port: 5432,
    database: "libreviews",
    user: "libreviews_user",
    password: "libreviews_password",
    max: 20,
    idleTimeoutMillis: 30000,
    connectionTimeoutMillis: 2000
  },

  // The secret used to sign the session cookie. Should be changed for
  // production environments.
  sessionSecret: "joeyTheCanadianStoreOwner",

  // Set your admin email if you want to request an HTTPS certificate
  adminEmail: "customizeforhttps@notavalidaddress",

  // How many minutes (!) should a session cookie last. Default = 30 days.
  sessionCookieDuration: 43200,

  // While an upload is in progress, we store it temporarily here.
  // Will be created if it doesn't exist.
  uploadTempDir: '/tmp/uploads',

  // Per file size limit
  uploadMaxSize: 104857600, // 100 MB

  // If you want to see blog posts from a certain team on the front page,
  // include the team ID here for now.
  frontPageTeamBlog: "",

  // Message key for the front page blog
  frontPageTeamBlogKey: "development diary",

  // Whether new users need a special link to sign up (earned by writing reviews)
  requireInviteLinks: false,

  // These are simple question/answer text captchas which can be enabled
  // for supported forms (currently just sign-ups). The keys refer to
  // the message files in locales/ and are deliberately generic so we can
  // provide culturally appropriate customizations if needed.
  questionCaptcha: {
    forms: {
      register: false
    },
    captchas: [
      {
        questionKey: "question: famous painting",
        answerKey: "answer: famous painting"
      },
      {
        questionKey: "question: famous composer",
        answerKey: "answer: famous composer"
      },
      {
        questionKey: "question: famous scientist",
        answerKey: "answer: famous scientist"
      }
    ]
 },

 // Adapters fetch info from third party APIs
 adapterUserAgent: 'lib.reviews import 0.1.0',

 // By default, we give each adapter 10 seconds to complete its work
 adapterTimeout: 10000,

 // ElasticSearch settings. Set log to 'error' to minimize spamminess.
  search: {
    port: 9200,
    host: 'localhost',
    log: 'trace'
  },

 // Add "http://localhost:9100/reviews" to the array if you are running the IRC
 // bot with default port. It will then be notified whenever there is a new
 // review
 webHooks: {"newReview":[]},

 // If you want to run the IRC bot in tools/irc-bot.js,
 // adjust the settings below in your config.
 irc: {
   appPort: 9100,
   botName: "fixme",
   options: {
     userName: "fixme",
     port: 7070,
     channels: [
       "#lib.reviews"
     ],
     secure: true,
     sasl: true,
     password: "fixme",
     debug: true
   },
   server: "irc.libera.chat"
  }
}
