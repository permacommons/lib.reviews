name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [22.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install PostgreSQL client tools
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Prepare PostgreSQL databases
        env:
          PGPASSWORD: postgres
        run: |
          until pg_isready -h localhost -U postgres; do sleep 1; done

          psql -h localhost -U postgres -c "DROP ROLE IF EXISTS libreviews_user;"
          psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS libreviews WITH (FORCE);"
          psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS libreviews_test WITH (FORCE);"

          psql -h localhost -U postgres -c "CREATE ROLE libreviews_user LOGIN PASSWORD 'libreviews_password';"
          psql -h localhost -U postgres -c "CREATE DATABASE libreviews OWNER libreviews_user;"
          psql -h localhost -U postgres -c "CREATE DATABASE libreviews_test OWNER libreviews_user;"

          psql -h localhost -U postgres -f dal/setup-db-grants.sql

      - name: Install dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Run tests
        run: npm run test
